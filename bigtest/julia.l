# XXX - somehow broken
# FIXME
#
(seed (in "/dev/urandom" (rd 8)))
(de rnd NIL
   (let B
      (format
         (make
            (do (rand 128 256)
               (link (rand 0 9)) ) ) )
      (if (rand T) B (- B)) ) )
(de testme @
   (let (N (read)  X (eval (rest)))
      (unless (= N X)
         (println 'N: N 'X: X 'rest: (rest))
         (bye) ) ) )
(de cmpge @
   (let (N (= "true" (read))  X (eval (rest)))
      (unless (= N X)
         (println 'N: N 'X: X 'rest: (rest))
         (bye) ) ) )
(de bigint (N1 S N2)
   (prinl "BigInt(" N1 ") " S " BigInt(" N2 ")") )
(de divJ (N1 N2)
   (prinl "div(" N1 ", " N2 ")") )
(de andJ (N1 N2)
   (prinl "abs(" N1 ") & abs(" N2 ")") )
(de orJ (N1 N2)
   (prinl "abs(" N1 ") | abs(" N2 ")") )
(de xorJ (N1 N2)
   (prinl "xor(abs(" N1 "), abs(" N2 "))") )
(de lshJ (N1 N2)
   (prinl "BigInt(abs(" N1 ")) << abs(" N2 ")") )
(de rshJ (N1 N2)
   (prinl "BigInt(abs(" N1 ")) >> abs(" N2 ")") )
(pipe
   (out '(julia)
      (do 1000
         (setq N1 (rnd))
         (while (=0 (setq N2 (rnd))))
         (prinl N1)
         (prinl N2)
         (bigint N1 "+" N2)
         (bigint N1 "-" N2)
         (bigint N1 "*" N2)
         (bigint N1 "/" N2)
         (bigint (abs N1) "%" (abs N2))
         (divJ N1 N2)
         (andJ N1 N2)
         (orJ N1 N2)
         (xorJ N1 N2)
         (lshJ N1 10)
         (lshJ N1 1024)
         (rshJ N1 10)
         (rshJ N1 1024)
         (prinl N1 ">=" N2)
         (prinl N1 "<=" N2)
         (at (0 . 1000) (wait 50)) ) )
   (do 10
      (do 100
         (setq N1 (read)  N2 (read))
         (testme '+ N1 N2)
         (testme '- N1 N2)
         (testme '* N1 N2)
         (testme '% (abs N1) (abs N2))
         (testme '/ N1 N2)
         (testme '& N1 N2)
         (testme '| N1 N2)
         (testme 'x| N1 N2)
         (testme '>> -10 (abs N1))
         (testme '>> -1024 (abs N1))
         (testme '>> 10 (abs N1))
         (testme '>> 1024 (abs N1))
         (cmpge '>= N1 N2)
         (cmpge '<= N1 N2) )
      (prin ".")
      (flush) ) )
(prinl)

(msg 'OK-julia)
(bye)
